# Build and autotest script for PX4 Firmware
# http://travis-ci.org

language: cpp

git:
  depth: 1500

# white list
branches:
  only:
  - develop
  - /^v[0-9].*$/
  - /^release_[0-9].*$/
  - /^release-[0-9].*$/

env:
  global:
    - BRANCH=develop

matrix:
  fast_finish: true
  include:
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=autopilot
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=autopilot_episci
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=autopilot_3dr
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=check_format
    - os: linux
      sudo: required
      services:
        - docker
      env: BUILD_TARGET=clang-tidy
#     - os: osx
#       sudo: true
#       osx_image: xcode9.2
#       env: BUILD_TARGET=tests

cache:
  ccache: true

before_install:
  - if [[ "${TRAVIS_OS_NAME}" = "linux" && "${TRAVIS_BRANCH}" == "coverity" ]]; then sudo apt-get install genromfs && pip install empy jinja2; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew tap PX4/px4; brew update; brew upgrade; brew install px4-dev; brew tap osrf/simulation; brew install gazebo7 opencv; brew install s3cmd && sudo -H easy_install pip && pip install --user numpy toml empy catkin_pkg jinja2 pyyaml; fi
  - if [[ "${BUILD_TARGET}" = *"autopilot"* && "${TRAVIS_BRANCH}" != "coverity" ]]; then pip install --user s3cmd pycrypto pyserial; sudo apt-get install -y curl; fi

script:
    # Exit if one of the scripts fails.
  - set -e
  - if [[ "${BUILD_TARGET}" = "autopilot" && "${TRAVIS_BRANCH}" != "coverity" ]]; then
      ./Tools/docker_run.sh 'PX4_RESTRICTED_BUILD=1 make check_yuneec_tap-v2_default check_yuneec_tap-v3_default';
    elif [[ "${BUILD_TARGET}" = "autopilot_episci" && "${TRAVIS_BRANCH}" != "coverity" ]]; then
      ./Tools/docker_run.sh 'PX4_RESTRICTED_BUILD=1 PX4_EPISCI_BUILD=1 make check_yuneec_tap-v2_default check_yuneec_tap-v3_default';
    elif [[ "${BUILD_TARGET}" = "autopilot_3dr" && "${TRAVIS_BRANCH}" != "coverity" ]]; then
    ./Tools/docker_run.sh 'PX4_3DR_BUILD=1 make check_yuneec_tap-v2_default check_yuneec_tap-v3_default';
    elif [[ "${BUILD_TARGET}" = "check_format" && "${TRAVIS_BRANCH}" != "coverity" ]]; then
      ./Tools/docker_run.sh 'make check_format';
    elif [[ "${BUILD_TARGET}" = "tests_linux" && "${TRAVIS_BRANCH}" != "coverity" ]]; then
      ./Tools/docker_run.sh 'make tests';
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      make tests;
    elif [ "${BUILD_TARGET}" = "clang-tidy" ]; then
      ./Tools/docker_run.sh 'make clang-tidy-quiet';
    fi;

after_success:
  - set -ev
  - if [[ "${BUILD_TARGET}" = *"autopilot"* && "${TRAVIS_BRANCH}" != "coverity" ]]; then

      ./Tools/check_deploy.sh;

      mkdir -p s3autopilot;
      ./Tools/generate_yuneec.py build/yuneec_tap-v2_default/yuneec_tap-v2_default.px4 s3autopilot/autopilot.yuneec ${AUTOPILOT_AES_KEY};
      fwversion=$(./yuneec_version.sh);
      gitversion=$(git describe --always --tags);
      echo "$fwversion" > s3autopilot/version;
      echo "$TRAVIS_COMMIT" > s3autopilot/git;
      date > s3autopilot/timestamp;
      cp CHANGELOG.md s3autopilot/changelog;
      git log -50 > s3autopilot/gitlog;
      sha256sum s3autopilot/autopilot.yuneec | head -c 64 > s3autopilot/hash;
      openssl aes-256-cbc -in build/yuneec_tap-v2_default/yuneec_tap-v2_default.elf -out s3autopilot/autopilot.elf.encrypted -k ${AUTOPILOT_AES_KEY}

      is_alpha=`echo "$TRAVIS_TAG" | grep '^v[0-9]\+.[0-9]\+.[0-9]\+-[0-9]\+.[0-9]\+.[0-9]\+alpha[0-9]\+$' | wc -l`;
      is_beta=`echo "$TRAVIS_TAG" | grep '^v[0-9]\+.[0-9]\+.[0-9]\+-[0-9]\+.[0-9]\+.[0-9]\+beta[0-9]\+$' | wc -l`;
      is_rc=`echo "$TRAVIS_TAG" | grep '^v[0-9]\+.[0-9]\+.[0-9]\+-[0-9]\+.[0-9]\+.[0-9]\+rc[0-9]\+$' | wc -l`;
      is_release=`echo "$TRAVIS_TAG" | grep '^v[0-9]\+.[0-9]\+.[0-9]\+-[0-9]\+.[0-9]\+.[0-9]\+$' | wc -l`;

      function upload_to_s3 { s3cmd --add-header=x-amz-meta-firmware-version:${TRAVIS_TAG} -m $3 --access_key=${AWS_ACCESS_KEY_ID} --secret_key=${AWS_SECRET_ACCESS_KEY} --add-header="Cache-Control:public, max-age=0" put $1 $2; };

      if [[ ! -z "${TRAVIS_PULL_REQUEST_BRANCH}" ]]; then
        upload_to_s3 s3autopilot/autopilot.yuneec           s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/autopilot.yuneec application/octet-stream;
        upload_to_s3 s3autopilot/version                    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/version text/plain;
        upload_to_s3 s3autopilot/hash                       s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/hash text/plain;
        upload_to_s3 s3autopilot/git                        s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/git text/plain;
        upload_to_s3 s3autopilot/gitlog                     s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/gitlog text/plain;
        upload_to_s3 s3autopilot/timestamp                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/timestamp text/plain;
        upload_to_s3 s3autopilot/changelog                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/changelog text/plain;
        upload_to_s3 s3autopilot/autopilot.elf.encrypted    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${TRAVIS_BRANCH}/${TRAVIS_PULL_REQUEST_BRANCH}/${gitversion}/autopilot.elf.encrypted text/plain;
      else
        if [[ "${TRAVIS_BRANCH}" = "develop" ]]; then
          upload_to_s3 s3autopilot/autopilot.yuneec           s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/autopilot.yuneec application/octet-stream;
          upload_to_s3 s3autopilot/version                    s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/version text/plain;
          upload_to_s3 s3autopilot/hash                       s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/hash text/plain;
          upload_to_s3 s3autopilot/git                        s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/git text/plain;
          upload_to_s3 s3autopilot/gitlog                     s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/gitlog text/plain;
          upload_to_s3 s3autopilot/timestamp                  s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/timestamp text/plain;
          upload_to_s3 s3autopilot/changelog                  s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/changelog text/plain;
          upload_to_s3 s3autopilot/autopilot.elf.encrypted    s3://cf2e449e-50b3-48b5-ad6c-47abfa70e116/H520-develop/${BUILD_TARGET}/autopilot.elf.encrypted text/plain;
        fi;

        upload_to_s3 s3autopilot/autopilot.yuneec           s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/autopilot.yuneec application/octet-stream;
        upload_to_s3 s3autopilot/version                    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/version text/plain;
        upload_to_s3 s3autopilot/hash                       s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/hash text/plain;
        upload_to_s3 s3autopilot/git                        s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/git text/plain;
        upload_to_s3 s3autopilot/gitlog                     s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/gitlog text/plain;
        upload_to_s3 s3autopilot/timestamp                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/timestamp text/plain;
        upload_to_s3 s3autopilot/changelog                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/changelog text/plain;
        upload_to_s3 s3autopilot/autopilot.elf.encrypted    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/latest/autopilot.elf.encrypted text/plain;

        upload_to_s3 s3autopilot/autopilot.yuneec           s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/autopilot.yuneec application/octet-stream;
        upload_to_s3 s3autopilot/version                    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/version text/plain;
        upload_to_s3 s3autopilot/hash                       s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/hash text/plain;
        upload_to_s3 s3autopilot/git                        s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/git text/plain;
        upload_to_s3 s3autopilot/gitlog                     s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/gitlog text/plain;
        upload_to_s3 s3autopilot/timestamp                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/timestamp text/plain;
        upload_to_s3 s3autopilot/changelog                  s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/changelog text/plain;
        upload_to_s3 s3autopilot/autopilot.elf.encrypted    s3://${S3_BUCKET_NAME}/${BUILD_TARGET}/${BRANCH}/${gitversion}/autopilot.elf.encrypted text/plain;
      fi;

      if [[ is_release -eq 1 && "${BUILD_TARGET}" = "autopilot" ]]; then
        ./Tools/publish_slack_notification.sh ${TRAVIS_TAG};
      fi;
    fi;

deploy:
  - provider: releases
    api_key:
      secure: xNcSJImv5YNJMxhPUO5BOD9ZbK0cnC26AY6Vr3HNJjxUXKYEs/K3IIT1XL13Y3EmmJdUZVRNtGCCamkOOBU/Aap/Tzwzs8R5sSGd/OKaK8E+PklXJruQfbOQV84ATa0PnW5hHjbD550G3GYI8wE8XGbtyPGBM71jUX9ePNIQWSgUrD0XzfuPdoJC3nyjSk7siwaaAA+19iWu86p8LnKmeqG1KHQUxNv5iOY1C+pgA3IQsLGdDRlvT7wknC7UiQZFW7hLq9Lxjtvwn96mBRoOduLfdx6tdffnILeW+axWWClAPUA2IKiKOKUgSF+fnzitorPTU+wWG8U+I7idUb6big8d9PqCFwzQX3wNOstx1QvcuA/g5oe+X70TTuTKSKwGsrOKwdDcYC1Nm5Y3Ld5YMmjoUvtmVmYjwH/tTR9VQL+iXv2Efie+xCP6vYaU9eF39CWHKqz8UHSWu2l9oNEVNcRzEJ3L8lkIf7xezmx3L+7gDlKsvJ4baaiQq46g3oQh61DqouDY/VzBsr02sJZnfs2zKPEztvZr9JEjeFu+ezwISaaDt+Xf3ZK9dNTLhrw65Xc+i4VVpNQrSyWHLyjrwUWaZ0aIVAiYQ2lV9VlUqSJ98yHBGdXQ1CsFkB8Ho8IeKSnKXtbf8WJid3MqikwXFUND5tApFtLw+xDp1j3tfKs=
    file:
      - build/yuneec_tap-v2_default/yuneec_tap-v2_default.px4
      - s3autopilot/autopilot.yuneec
    skip_cleanup: true
    on:
      tags: true
      repo: YUNEEC/Firmware
      condition: $BUILD_TARGET = autopilot
